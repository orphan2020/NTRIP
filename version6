#include <WiFi.h>
#include <WebServer.h>
#include <DNSServer.h>
#include <Preferences.h>

Preferences preferences;
WebServer server(80);
DNSServer dnsServer;

// DNS captive portal settings
const byte DNS_PORT = 53;
IPAddress apIP(192,168,4,1);

// WiFi AP credentials
const char *apSSID = "Ardusimple-NTRIP";
const char *apPASS = "12345678";

// Config data
String wifiSSID;
String wifiPASS;
String ntripHost;
String ntripPort;
String ntripMount;
String ntripUser;
String ntripPass;
String uartBaud;
String uartTx;
String uartRx;

// Status counters
unsigned long lastUpdate = 0;
unsigned long lastBytesSent = 0;
unsigned long lastBytesReceived = 0;
unsigned long bytesSent = 0;
unsigned long bytesReceived = 0;

void handleRoot() {
  String html = R"rawliteral(
  <!DOCTYPE html>
  <html>
  <head>
    <meta name="viewport" content="width=device-width, initial-scale=1">
    <style>
      body { font-family: Arial; margin: 0; padding: 0; background: #f5f5f5; }
      .container { padding: 10px; }
      .card { background: #fff; padding: 15px; margin: 10px 0; border-radius: 12px; box-shadow: 0 2px 6px rgba(0,0,0,0.15); }
      h2 { font-size: 18px; margin-bottom: 10px; }
      input[type=text], input[type=password], input[type=number] {
        width: 100%; padding: 8px; margin: 6px 0; border: 1px solid #ccc; border-radius: 8px;
      }
      button {
        width: 100%; padding: 10px; background: #0078d7; color: white; border: none; border-radius: 8px; font-size: 16px;
      }
      .status { font-size: 14px; color: #333; }
    </style>
  </head>
  <body>
    <div class="container">
      <div class="card">
        <h2>WiFi Settings</h2>
        <form id="configForm" action="/config" method="POST">
          SSID:<br><input type="text" name="wifiSSID" value="%WIFISSID%"><br>
          Password:<br><input type="password" name="wifiPASS" value="%WIFIPASS%"><br>

          <h2>NTRIP Settings</h2>
          Host:<br><input type="text" name="ntripHost" value="%NTRIPHOST%"><br>
          Port:<br><input type="number" name="ntripPort" value="%NTRIPPORT%"><br>
          Mountpoint:<br><input type="text" name="ntripMount" value="%NTRIPMOUNT%"><br>
          User:<br><input type="text" name="ntripUser" value="%NTRIPUSER%"><br>
          Pass:<br><input type="password" name="ntripPass" value="%NTRIPPASS%"><br>

          <h2>UART Settings</h2>
          Baud:<br><input type="number" name="uartBaud" value="%UARTBAUD%"><br>
          TX Pin:<br><input type="number" name="uartTx" value="%UARTTX%"><br>
          RX Pin:<br><input type="number" name="uartRx" value="%UARTRX%"><br>

          <button type="submit">Save & Reboot</button>
        </form>
      </div>

      <div class="card">
        <h2>Status</h2>
        <div id="statusBox" class="status">Loading...</div>
      </div>
    </div>

    <script>
      function updateStatus(){
        fetch('/status.json')
        .then(response => response.json())
        .then(data => {
          document.getElementById('statusBox').innerHTML =
            'WiFi Mode: ' + data.mode + '<br>' +
            'STA IP: ' + data.sta_ip + '<br>' +
            'AP IP: ' + data.ap_ip + '<br>' +
            'NTRIP: ' + data.ntrip + '<br>' +
            'Bytes Sent/s: ' + data.bytes_sent + '<br>' +
            'Bytes Received/s: ' + data.bytes_received;
        });
      }
      setInterval(updateStatus, 3000);
      updateStatus();

      document.getElementById("configForm").addEventListener("submit", function(){
        setTimeout(function(){
          document.body.innerHTML = "<h2 style='padding:20px;font-family:Arial'>Settings saved. Device is rebooting...</h2>";
        }, 200);
      });
    </script>
  </body>
  </html>
  )rawliteral";

  html.replace("%WIFISSID%", wifiSSID);
  html.replace("%WIFIPASS%", wifiPASS);
  html.replace("%NTRIPHOST%", ntripHost);
  html.replace("%NTRIPPORT%", ntripPort);
  html.replace("%NTRIPMOUNT%", ntripMount);
  html.replace("%NTRIPUSER%", ntripUser);
  html.replace("%NTRIPPASS%", ntripPass);
  html.replace("%UARTBAUD%", uartBaud);
  html.replace("%UARTTX%", uartTx);
  html.replace("%UARTRX%", uartRx);

  server.send(200, "text/html", html);
}

void handleConfig() {
  if(server.method() == HTTP_POST){
    wifiSSID = server.arg("wifiSSID");
    wifiPASS = server.arg("wifiPASS");
    ntripHost = server.arg("ntripHost");
    ntripPort = server.arg("ntripPort");
    ntripMount = server.arg("ntripMount");
    ntripUser = server.arg("ntripUser");
    ntripPass = server.arg("ntripPass");
    uartBaud = server.arg("uartBaud");
    uartTx = server.arg("uartTx");
    uartRx = server.arg("uartRx");

    preferences.begin("config", false);
    preferences.putString("wifiSSID", wifiSSID);
    preferences.putString("wifiPASS", wifiPASS);
    preferences.putString("ntripHost", ntripHost);
    preferences.putString("ntripPort", ntripPort);
    preferences.putString("ntripMount", ntripMount);
    preferences.putString("ntripUser", ntripUser);
    preferences.putString("ntripPass", ntripPass);
    preferences.putString("uartBaud", uartBaud);
    preferences.putString("uartTx", uartTx);
    preferences.putString("uartRx", uartRx);
    preferences.end();

    server.send(200, "text/html", "<html><body><h2>Settings saved. Rebooting...</h2></body></html>");
    delay(1000);
    ESP.restart();
  }
}

void handleStatusJSON(){
  unsigned long now = millis();
  unsigned long delta = now - lastUpdate;
  if(delta >= 1000){
    lastBytesSent = bytesSent;
    lastBytesReceived = bytesReceived;
    bytesSent = 0;
    bytesReceived = 0;
    lastUpdate = now;
  }

  String json = "{";
  json += "\"mode\":\"" + String(WiFi.getMode() == WIFI_STA ? "STA" : "AP+STA") + "\",";
  json += "\"sta_ip\":\"" + WiFi.localIP().toString() + "\",";
  json += "\"ap_ip\":\"" + WiFi.softAPIP().toString() + "\",";
  json += "\"ntrip\":\"OK\","; // placeholder for real NTRIP state
  json += "\"bytes_sent\":\"" + String(lastBytesSent) + "\",";
  json += "\"bytes_received\":\"" + String(lastBytesReceived) + "\"}";

  server.send(200, "application/json", json);
}

void setup(){
  Serial.begin(115200);

  preferences.begin("config", true);
  wifiSSID = preferences.getString("wifiSSID", "");
  wifiPASS = preferences.getString("wifiPASS", "");
  ntripHost = preferences.getString("ntripHost", "");
  ntripPort = preferences.getString("ntripPort", "2101");
  ntripMount = preferences.getString("ntripMount", "");
  ntripUser = preferences.getString("ntripUser", "");
  ntripPass = preferences.getString("ntripPass", "");
  uartBaud = preferences.getString("uartBaud", "115200");
  uartTx = preferences.getString("uartTx", "17");
  uartRx = preferences.getString("uartRx", "16");
  preferences.end();

  WiFi.mode(WIFI_AP_STA);
  WiFi.softAP(apSSID, apPASS);
  WiFi.begin(wifiSSID.c_str(), wifiPASS.c_str());

  dnsServer.start(DNS_PORT, "*", apIP);

  server.on("/", handleRoot);
  server.on("/config", handleConfig);
  server.on("/status.json", handleStatusJSON);
  server.onNotFound([](){ server.sendHeader("Location", String("/"), true); server.send(302, "text/plain", ""); });

  server.begin();
}

void loop(){
  dnsServer.processNextRequest();
  server.handleClient();
  // here you would update bytesSent/bytesReceived counters from UART/NTRIP
}
